import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID"))

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ä–æ–∫–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚è∞ –¢–µ—Ä–º—ñ–Ω–æ–≤–æ –¥–æ 1 –≥–æ–¥–∏–Ω–∏")],
        [KeyboardButton(text="üïï –î–æ 18:00")],
        [KeyboardButton(text="üå§ –ó–∞–≤—Ç—Ä–∞ –¥–æ 12")]
    ],
    resize_keyboard=True
)

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
questions = [
    "–í–∞—à–µ —ñ–º'—è üñä",
    "–ù–∞ —è–∫–∏–π –æ–±'—î–∫—Ç –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ç–µ—Ä—ñ–∞–ª/—ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç? üèó",
    "–ù–∞ –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ? ‚è≥"
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤
user_answers = {}

@dp.message(Command("start"))
async def start(message: types.Message):
    user_answers[message.from_user.id] = []
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –ü–æ—á–Ω–µ–º–æ –∑–∞–ø–æ–≤–Ω—é–≤–∞—Ç–∏ –∑–∞—è–≤–∫—É.")
    await message.answer(questions[0])

@dp.message()
async def answer(message: types.Message):
    user_id = message.from_user.id

    if user_id not in user_answers:
        await message.answer("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å /start –¥–ª—è –ø–æ—á–∞—Ç–∫—É.")
        return

    user_answers[user_id].append(message.text)

    if len(user_answers[user_id]) < len(questions):
        await message.answer(questions[len(user_answers[user_id])])
    else:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤ –≤ –æ–±—â–∏–π —á–∞—Ç
        answers_text = "\n".join(
            f"{q} {a}" for q, a in zip(questions, user_answers[user_id])
        )
        await bot.send_message(CHAT_ID, f"–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\n\n{answers_text}")
        await message.answer("–î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞.")
        user_answers.pop(user_id)
