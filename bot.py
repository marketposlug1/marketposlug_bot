from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
import asyncio

API_TOKEN = "8283929613:AAGsabwYn_34VBsEwByIFB3F11OMYQcr-X0"  # –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
MANAGER_CHAT_ID = -1003098912428  # ID –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —á–∞—Ç–∞ –¥–ª—è –∑–∞—è–≤–æ–∫

bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è FSM
class Form(StatesGroup):
    name = State()
    object_name = State()
    material_tool = State()
    date_needed = State()

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ - –Ω–∞—á–∏–Ω–∞–µ—Ç –æ–ø—Ä–æ—Å
@dp.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    await message.answer("–í–∞—à–µ —ñ–º'—è üñäÔ∏è")
    await Form.name.set()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏
@dp.message(Form.name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–ù–∞ —è–∫–∏–π –æ–±'—î–∫—Ç –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ç–µ—Ä—ñ–∞–ª/—ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç? üèóÔ∏è")
    await Form.object_name.set()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
@dp.message(Form.object_name)
async def process_object(message: types.Message, state: FSMContext):
    await state.update_data(object_name=message.text)
    await message.answer("–Ø–∫–∏–π –º–∞—Ç–µ—Ä—ñ–∞–ª –∞–±–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ—Ç—Ä—ñ–±–µ–Ω? üîß")
    await Form.material_tool.set()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞/–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
@dp.message(Form.material_tool)
async def process_material_tool(message: types.Message, state: FSMContext):
    await state.update_data(material_tool=message.text)
    await message.answer(
        "–ù–∞ –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ? ‚è∞\n"
        "‚ö° –¢–µ—Ä–º—ñ–Ω–æ–≤–æ –¥–æ 1 –≥–æ–¥–∏–Ω–∏\n"
        "üïï –î–æ 18:00\n"
        "üå§Ô∏è –ó–∞–≤—Ç—Ä–∞ –¥–æ 12"
    )
    await Form.date_needed.set()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç
@dp.message(Form.date_needed)
async def process_date_needed(message: types.Message, state: FSMContext):
    data = await state.get_data()
    text = (
        f"–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\n"
        f"–Ü–º'—è: {data['name']}\n"
        f"–û–±'—î–∫—Ç: {data['object_name']}\n"
        f"–ú–∞—Ç–µ—Ä—ñ–∞–ª/–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: {data['material_tool']}\n"
        f"–ù–∞ –∫–æ–ª–∏: {message.text}"
    )
    await bot.send_message(MANAGER_CHAT_ID, text)
    await message.answer("–ó–∞—è–≤–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚úÖ")
    await state.clear()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

