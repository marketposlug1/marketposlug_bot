import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiohttp import web
import threading

# ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ =====
API_TOKEN = os.getenv("API_TOKEN")   # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
MANAGER_CHAT_ID = int(os.getenv("MANAGER_CHAT_ID"))  # ID —á–∞—Ç–∞ –¥–ª—è –∑–∞—è–≤–æ–∫

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# ===== –õ–æ–≥–∏–∫–∞ –±–æ—Ç–∞ =====
@dp.message(commands=["start"])
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! üëã\n–î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º–æ –∑–∞—è–≤–∫—É.\n–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–∞—à–µ —ñ–º'—è:")

    @dp.message()
    async def name_handler(msg: types.Message):
        user_data = {"name": msg.text}

        await msg.answer("–ù–∞ —è–∫–∏–π –æ–±'—î–∫—Ç –ø–æ—Ç—Ä—ñ–±–µ–Ω –º–∞—Ç–µ—Ä—ñ–∞–ª/—ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç? üèóÔ∏è")

        @dp.message()
        async def object_handler(msg2: types.Message):
            user_data["object"] = msg2.text

            kb = ReplyKeyboardMarkup(
                keyboard=[
                    [KeyboardButton("‚è∞ –¢–µ—Ä–º—ñ–Ω–æ–≤–æ –¥–æ 1 –≥–æ–¥–∏–Ω–∏")],
                    [KeyboardButton("üïï –î–æ 18:00")],
                    [KeyboardButton("üå§Ô∏è –ó–∞–≤—Ç—Ä–∞ –¥–æ 12")]
                ],
                resize_keyboard=True,
                one_time_keyboard=True
            )
            await msg2.answer("–ù–∞ –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ? üìÖ", reply_markup=kb)

            @dp.message()
            async def deadline_handler(msg3: types.Message):
                user_data["deadline"] = msg3.text

                text = (
                    f"üìå –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\n\n"
                    f"üë§ –Ü–º'—è: {user_data['name']}\n"
                    f"üèóÔ∏è –û–±'—î–∫—Ç: {user_data['object']}\n"
                    f"‚è≥ –¢–µ—Ä–º—ñ–Ω: {user_data['deadline']}"
                )

                await bot.send_message(MANAGER_CHAT_ID, text)
                await msg3.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–π–Ω—è—Ç–∞!", reply_markup=ReplyKeyboardRemove())

# ===== –ú–∏–Ω–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render =====
async def handle(request):
    return web.Response(text="Bot is alive ‚úÖ")

app = web.Application()
app.router.add_get("/", handle)

def run_web():
    web.run_app(app, host="0.0.0.0", port=int(os.getenv("PORT", 10000)))

threading.Thread(target=run_web).start()

# ===== –ó–∞–ø—É—Å–∫ =====
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
